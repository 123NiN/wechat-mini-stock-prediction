const app = getApp()
import * as echarts from '../../ec-canvas/echarts';

Page({
  data: {
    date01:'2019-6-1',
    date02: '2019-6-21',
    //折现属性
    series:[{
      data:[],
      name:'实际数据',
      smooth:false,
      symbolSize:1,
      itemStyle: {
        normal: {
            lineStyle: {
              width:0.2// 0.1的线条是非常细的了，这是蓝色的数据线粗细
            }
        }
      },
      type:'line'
    }, {
        data: ([2.33,-0.83,1.88,0.2,1.02,-1.22,1.03,-1.42,-1.44,0.63,0.42,0,-0.21,-0.21,1.46,0,0,0.41,0.41,-0.41,1.02,-0.61,-1.02,-0.82,-1.03,0.21,-0.83,-1.05,-0.64,-0.21,-0.43,-0.43,0.65,0.86,-1.07,-2.15,-0.66,-1.33,0.9,0.22,-0.22,-0.89,0.23,-2.92,-0.92,2.33,-2.51 ,0.47,2.09,1.37,4.04,0.86,-0.86,-0.86,-1.09,-1.76,-0.67,-2.03,-1.38,1.64,-0.69,-1.85,-1.18,-0.24,0.24,-1.43,-1.43,0,0.74,0.74,0,3.18,4.03,2.05,-2.23,-0.46,1.15,-1.81,3.46,-2.23,1.37,-0.68,0.45,1.58,-2.22,-0.46,0.91,1.36,1.34,0.66,-1.53,-0.22,-2.67,0.46,-2.05,-1.63,0,0.47,-0.23,-0.24,0.95,0.23,0,-0.47,0,-0.7,-0.95,-0.48,-0.72,0.24,-0.24,1.45,0.71,-0.47,-0.95,1.44,-0.95,0.24,0.48,0.95,0,-0.23,0.71,0.7,0.93,-0.69,-0.23,-0.46,1.17,-0.23,1.62,0,-0.46,-0.23,-0.23,0.92,-0.46,0.23,-1.14,0.23,-0.23,-0.23,0.23,-0.69,-0.93,0.23,1.4,1.15,3.65,-1.54,0.67,0.22,0.22,-1.99,-0.45,0,0,0.91,0.9,-1.56,-0.92,0,-0.93,-0.23,0.47,-0.47,-1.87,0,-0.24,0.48,-0.48,0.24,0,3.1,-1.62,-0.47,0.71,-0.47,-2.36,-0.24,0.97,-1.2,0,1.21,1.44,-0.71,-0.24,-0.72,1.44,-0.71,1.19,0.24,-0.47,-0.24,-1.42,0.72,3.34,-3.46,-0.96]).reverse(),
        name: '预测数据',
        smooth: false,
        symbolSize:1,
        itemStyle: {
          normal: {
              lineStyle: {
                width:0.3// 0.1的线条是非常细的了，这是浅红色的粗细
              }
          }
        },
        type: 'line'
      }],
    // 默认7天
    ascissaData:(['2020-11-03','2020-11-04','2020-11-05','2020-11-06','2020-11-09','2020-11-10','2020-11-11','2020-11-12','2020-11-13','2020-11-16','2020-11-17','2020-11-18','2020-11-19','2020-11-20','2020-11-23','2020-11-24','2020-11-25','2020-11-26','2020-11-27','2020-11-30','2020-12-01','2020-12-02','2020-12-03','2020-12-04','2020-12-07','2020-12-08','2020-12-09','2020-12-10','2020-12-11','2020-12-14','2020-12-15','2020-12-16','2020-12-17','2020-12-18','2020-12-21','2020-12-22','2020-12-23','2020-12-24','2020-12-25','2020-12-28','2020-12-29','2020-12-30','2020-12-31','2021-01-04','2021-01-05','2021-01-06','2021-01-07','2021-01-08','2021-01-11','2021-01-12','2021-01-13','2021-01-14','2021-01-15','2021-01-18','2021-01-19','2021-01-20','2021-01-21','2021-01-22','2021-01-25','2021-01-26','2021-01-27','2021-01-28','2021-01-29','2021-02-01','2021-02-02','2021-02-03','2021-02-04','2021-02-05','2021-02-08','2021-02-09','2021-02-10','2021-02-18','2021-02-19','2021-02-22','2021-02-23','2021-02-24','2021-02-25','2021-02-26','2021-03-01','2021-03-02','2021-03-03','2021-03-04','2021-03-05','2021-03-08','2021-03-09','2021-03-10','2021-03-11','2021-03-12','2021-03-15','2021-03-16','2021-03-17','2021-03-18','2021-03-19','2021-03-22','2021-03-23','2021-03-24','2021-03-25','2021-03-26','2021-03-29','2021-03-30','2021-03-31','2021-04-01','2021-04-02','2021-04-06','2021-04-07','2021-04-08','2021-04-09','2021-04-12','2021-04-13','2021-04-14','2021-04-15','2021-04-16','2021-04-19','2021-04-20','2021-04-21','2021-04-22','2021-04-23','2021-04-26','2021-04-27','2021-04-28','2021-04-29','2021-04-30','2021-05-06','2021-05-07','2021-05-10','2021-05-11','2021-05-12','2021-05-13','2021-05-14','2021-05-17','2021-05-18','2021-05-19','2021-05-20','2021-05-21','2021-05-24','2021-05-25','2021-05-26','2021-05-27','2021-05-28','2021-05-31','2021-06-01','2021-06-02','2021-06-03','2021-06-04','2021-06-07','2021-06-08','2021-06-09','2021-06-10','2021-06-11','2021-06-15','2021-06-16','2021-06-17','2021-06-18','2021-06-21','2021-06-22','2021-06-23','2021-06-24','2021-06-25','2021-06-28','2021-06-29','2021-06-30','2021-07-01','2021-07-02','2021-07-05','2021-07-06','2021-07-07','2021-07-08','2021-07-09','2021-07-12','2021-07-13','2021-07-14','2021-07-15','2021-07-16','2021-07-19','2021-07-20','2021-07-21','2021-07-22','2021-07-23','2021-07-26','2021-07-27','2021-07-28','2021-07-29','2021-07-30','0','0','0','0','0','0','0','2020-11-06','2020-11-06','2020-11-06','2021-08-23','0','0','0','0','2021-08-23']).reverse(),
    ec: {
      lazyLoad: true
    },   
    stockid:'', 
  },
  init_echarts: function () {
    this.echartsComponnet.init((canvas, width, height) => {
      // 初始化图表
      const Chart = echarts.init(canvas, null, {
        width: width,
        height: height
      });
      Chart.setOption(this.getOption());
      // 注意这里一定要返回 chart 实例，否则会影响事件处理等
      return Chart;
    });
  },
  getOption: function () {
    var that = this
    console.log(that.data.series)
    console.log(that.data.ascissaData)
    var legendList = []
    for (var i in that.data.series) {
      var obj = {
        name: that.data.series[i].name,
        icon: 'circle',
        textStyle: {
          color: '#000000',
        }
      }
      legendList.push(obj)
      that.data.series[i].data.reverse()
    }
    var option = {
      color: ["#37A2DA", "#FF3399"],
      /* 折线介绍文字设置 */
      legend: {
        itemWidth: 5, 
        itemGap: 25,
        selectedModel: 'single', 
        inactiveColor: 'red',
        data: legendList,
        bottom: 0,
        left: 30,
        z: 100
      },
      grid: {
        containLabel: true
      },
      
      xAxis: {
        type: 'category',
        boundaryGap: false,
        data: that.data.ascissaData.reverse(),
      },
      yAxis: {
        x: 'center',
        type: 'value',
        splitLine: {
          lineStyle: {
            type: 'dashed'
          }
        },
        axisLine: { //y轴坐标是否显示
          show: false
        },
        axisTick: { //y轴刻度小标是否显示
          show: false
        }
      },
      series: that.data.series
    }
    return option
  },

  onLoad: function(options) {
    var that=this;
    this.data.stockid=app.globalData.stockid
    console.log(this.data.series[0].data)
    var value=[]
    var detail=[]
    /*下：调用接口获得对应时间内的实际股票涨跌百分比数据*/
    wx.request({
      url: 'http://q.stock.sohu.com/hisHq?code=cn_'+this.data.stockid+'&start=20201103&end=20210823&stat=1&order=D&period=d&callback=historySearchHandler&rt=json',
      success: function (res) {//这里写调用接口失败之后所运行的函数
        console.log(res.data)
        var mount=res.data[0].hq.length
        console.log(mount)
        for(var i=0;i<mount;i++){
        var value=res.data[0].hq[i][4]
        var val=value.substr(0, value.length - 1); 
        var recivedata = JSON.parse(val);
        detail.push(recivedata)
        }
        console.log(detail)
        
        that.data.series[0].data=detail
        console.log(that.data.series[0].data)
        that.init_echarts()
      }
  })
  
    
    var that = this;
    that.echartsComponnet = this.selectComponent('#mychart');
   
    // 系统宽高
    
    
  },
})